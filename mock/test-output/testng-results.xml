<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="21" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="57" started-at="2016-08-26T06:29:11Z" finished-at="2016-08-26T06:29:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="57" started-at="2016-08-26T06:29:11Z" finished-at="2016-08-26T06:29:11Z">
      <class name="org.rnott.mock.evaluators.StringEvaluatorTest">
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="10" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[length]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1d55d69b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[substring]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6e7c6928]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[substring]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@29dbf9c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[compareTo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@28ea86ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[replace]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3d2fdcd7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@114bc6a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5de0034]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@31df58ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3e478ad6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4aec078b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4de35d1a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@9f57de9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="methods" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@541d511a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[method]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String target instance must be the first parameter provided]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String target instance must be the first parameter provided
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[method]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@50b7ad1a]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String target instance must be the first parameter provided]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String target instance must be the first parameter provided
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[method]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4ac5af5c]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String target instance must be the first parameter provided]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String target instance must be the first parameter provided
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[method]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@e92c877]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String.method() does not exist or is not accessible]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String.method() does not exist or is not accessible
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:49)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[length]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@46a7041a]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String.length(java.lang.Integer) does not exist or is not accessible]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String.length(java.lang.Integer) does not exist or is not accessible
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:49)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="1" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[indexOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7efe6b32]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String.indexOf(java.lang.Character) does not exist or is not accessible]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String.indexOf(java.lang.Character) does not exist or is not accessible
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:49)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="evaluate_IllegalStateException(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="evaluate_IllegalStateException" duration-ms="0" started-at="2016-08-25T23:29:11Z" data-provider="invalid" finished-at="2016-08-25T23:29:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[substring]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@712fe0c0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[String.substring(java.lang.Integer, java.lang.Character) does not exist or is not accessible]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: String.substring(java.lang.Integer, java.lang.Character) does not exist or is not accessible
	at org.rnott.mock.evaluators.StringEvaluator.evaluate(StringEvaluator.java:49)
	at org.rnott.mock.evaluators.StringEvaluatorTest.evaluate_IllegalStateException(StringEvaluatorTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evaluate_IllegalStateException -->
        <test-method status="PASS" signature="key()[pri:0, instance:org.rnott.mock.evaluators.StringEvaluatorTest@6d8f5c10]" name="key" duration-ms="0" started-at="2016-08-25T23:29:11Z" finished-at="2016-08-25T23:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- key -->
      </class> <!-- org.rnott.mock.evaluators.StringEvaluatorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
